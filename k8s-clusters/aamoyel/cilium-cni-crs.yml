apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
 name: cilium-cni
 namespace: aamoyel
spec:
 strategy: "ApplyOnce"
 clusterSelector:
   matchLabels:
     cni: cilium
 resources:
   - name: cilium-cni
     kind: ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-cni
  namespace: aamoyel
data:
  manifests: |
    # Source: cilium/templates/cilium-agent/serviceaccount.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: "cilium"
      namespace: kube-system
    ---
    # Source: cilium/templates/cilium-operator/serviceaccount.yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: "cilium-operator"
      namespace: kube-system
    ---
    # Source: cilium/templates/cilium-ca-secret.yaml
    apiVersion: v1
    kind: Secret
    metadata:
      name: cilium-ca
      namespace: kube-system
    data:
      ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRkN1VHRQaDZldHhXcEJxNlBoTVhsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpFNE1UVTFORE01V2hjTk1qWXdNakUzTVRVMQpORE01V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFkxSjk4ejFJS0d1eXhNVEVDWm44RHJYbVlkanVMcStsYU9JUll5WXlZb0dzckQzTVAKR2wrYkpxV01QbUh5ZWltaHA2Yk5nUEpqN3UxRUI5N0Q3S0NFWDJwTHVxa1dWVDYxdmllMnFrWFRoUXlMQWpzWQpOejVzVlRIa05Pd2h4d3JsWlVQRkRLczFjSVRWc1dwUUovZks3QWVLVGwxSTBsSk8vNzhMNzNBUEdMTWJHMklmCk96dk1ucThNMUYxZnVQeU42c294NGRLV3AxUHAzYXcycjdaWUNHbXl2ZW9wRW9wWXJGTjMwZkZ6cnJNR0FmUHIKNUNsWnc3N0djMFRxYnQ2UVVVd2JxWFoxbmFLb3R5UU5EcktqWkJKSG1YbnpPRE5tdnNJQ0dVaEJqV01MSmtkSApUdnRIdXJ0RmdUZnkydDN3Ukl0NFppNytSQUxyd3QzTGs0aVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxakZ3Z3MvUHFkSTQ3R0diOHQrbnZQdUdkb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNN3NPNUV6OWVhTnJ0K29XeVNZTXRkK1o0cUZEWHFxOWwvaktQUDZpTkhQbjlxNTFEUWdPbFBpCm9PMXkzcW9ReVR3UUtFSXFuRTdhV0lpN2dHNlgxUzE3L1lpQ1NZTEVyRTEvRG1DbmJ3NUZKdDNpUDBPWTNtQkMKZnk5cmhFaUpBdDk0dDg5OHB2U0FSSUhqemJ4eGthNkFBVkR4K2ErdjNabm5IZjFSQjVMNks1YWVMVitGYjlncwpKS2tKZjlsZVBCQ242ditnS0svNElHMU5OWENjSG5zcGUwNVI5dzFtNytjb3BTV1lIVU1tUys0bjg5dDBKY01GCnRwcVJmSktVNUNaYnFnMVorN1JGaVkvdTRzRHd4WEZ2bnZNbzUrNWQ3bVZqL3BBNGlyS0g1Z3c5dmd6RzhiejYKUU1oVkhkYk1xUHp5ZnhBdE54OFkxSkxYRWRneGhCMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMk5TZmZNOVNDaHJzc1RFeEFtWi9BNjE1bUhZN2k2dnBXamlFV01tTW1LQnJLdzl6CkR4cGZteWFsakQ1aDhub3BvYWVtellEeVkrN3RSQWZldyt5Z2hGOXFTN3FwRmxVK3RiNG50cXBGMDRVTWl3STcKR0RjK2JGVXg1RFRzSWNjSzVXVkR4UXlyTlhDRTFiRnFVQ2YzeXV3SGlrNWRTTkpTVHYrL0MrOXdEeGl6R3h0aQpIenM3eko2dkROUmRYN2o4amVyS01lSFNscWRUNmQyc05xKzJXQWhwc3IzcUtSS0tXS3hUZDlIeGM2NnpCZ0h6CjYrUXBXY08reG5ORTZtN2VrRkZNRzZsMmRaMmlxTGNrRFE2eW8yUVNSNWw1OHpnelpyN0NBaGxJUVkxakN5WkgKUjA3N1I3cTdSWUUzOHRyZDhFU0xlR1l1L2tRQzY4TGR5NU9JandJREFRQUJBb0lCQUc0K1JNeW5lRFhORkxUTwpwdlZxZVgrOExzdTJxWFhOTlRyNjYwZGRTays3bUdGdlhIZThXQW5CYjRCTG8yOHViNFpTZ0R1U0tTdG9LbGhoCmpBQ2ZpY2xqM2Q2ZERDVmZ1QitkakFHU3R5ZmhTTXhRbVEwcDRXSWhPdG1sa3IxbHZ3TjlKaVRFMlRPMWZzUkwKalJzdUJ3MjBUZTBqQk1qbXJwU2Q4VnUzSklsM2ZNaHpEbzJUMzNnZ2ttdmw3R2tiVDk1MnMxZmhub1hPNzcyZQpnTGdUbGVkMWh3aXBVbTNQTFF5eXBXaGs4SWZ0ODV2bkgvMHpobStKZDRYcTdzdnprREFWUUJTaVArVUlYQ0E2CjNqVGZ6Yk1ZSC84N0YzZW93S2s5NjIxRDB2eWFMWkRtTHYrdzdZYVhyMlNETnRGbDY1dmxkQzlyNHVURU5NZXgKdUdxemVDRUNnWUVBNVp4elQ2SFFyZklWUi9ENmxJTktUSFo3akdJMnZ3SnpMKzZkRjM0K1g2RDh6MHMrL0N2MQorWmZzVW9NN1Y4ZHRHQ2dmdXJybnVUY3hzT0NQa1dJci91MTJjWDZPNXdiakVZcTBOckZwVTFZWnB1TTJqN2tGCjVpcjVMMGtvY2hmS3dEY2RJOHUxN1B3T0pmUkdWWjVwZVVsUDFIbGp3V0tzNTBaVTFFdWJZdjhDZ1lFQThjQWwKZE1sNUhOeXgvcVE5MS9VbWREYVRqMHA4aWRSM2xZR3RWaTkwanRoMFpxaXNvR0lnN2kxaFMraXZWUGxSdER5UgpyMXZRWVRUdzRoWmxPb0ZkOEcwR2lZK0NvTVZDT0xxeUJBd2kzQUsyOWtXcmNYeFdIZHh5UDJDbHllUHQveWo2CnFFQS9uRXNvWkhQeHNkNlZIRlBKNWREN0pIUlVoamMzTWpWQktuRUNnWUVBcG1Mb0FLV3U5YzMrYytLQmd3dGMKMU9ucS84RFFFVHh5UWlLMGZhakRCRU5Ceitta0c5S3piWW9VKzNvVGo3bDVLYzh4cHZ2NEhYU01zck1YOW05ZwptRngxdnlySjNVcFZVNG5pcTl1R0NwalMvK2VZeXk5MXdlUVVMSnJrRDBHRWNDUEFId2RvcnZHOFF1NnY1UzFsCkd6bnYrblY0djFPRkhoY09NOFVTTmZzQ2dZRUF2dzFjVEtTZ3EzZWF6NlJiSDUybFN6aUtlemFobjRlakRpdVMKb2tjVXRZTkkwb3pCQ0dza25UYU42eUN6MTlMRmlFeEowaTBjVElZN1RHSG9sRWtDeFd4VU8waUlNcWhTQW1WQgpKRU8zRk9xc1Q0cVZ5RFU4RlpOUFV0ajlqTVV1SkhYdFNpU2tZTTlnMTZwdHUyVXRzRnBqZDlVbGRSVGVhOGVkClBuZXB6WEVDZ1lCL0lReXpSQ2ppRGM4clhkRE8xTmNtSFZ4Sk9kY0crU01RZ1pkcVhYYWhXN0g2UUV3OEFMRmUKVzBYQ1BuMGE1WVdyV1Z0RkdDRStmRy9DT20vcWZueUdXVUg2RFRVRFhQQVg4OFQ2S2U0SWoxZXJLVk5xNm1GdgpsRE03d0lXVWlVazBVUFgzV1lVSmlRT0RxU0w4M29TUzVFTURQdWpBSEJETUYxZWJ3VFl3cUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    ---
    # Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
    apiVersion: v1
    kind: Secret
    metadata:
      name: hubble-ca-secret
      namespace: kube-system
    data:
      ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRkN1VHRQaDZldHhXcEJxNlBoTVhsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpFNE1UVTFORE01V2hjTk1qWXdNakUzTVRVMQpORE01V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFkxSjk4ejFJS0d1eXhNVEVDWm44RHJYbVlkanVMcStsYU9JUll5WXlZb0dzckQzTVAKR2wrYkpxV01QbUh5ZWltaHA2Yk5nUEpqN3UxRUI5N0Q3S0NFWDJwTHVxa1dWVDYxdmllMnFrWFRoUXlMQWpzWQpOejVzVlRIa05Pd2h4d3JsWlVQRkRLczFjSVRWc1dwUUovZks3QWVLVGwxSTBsSk8vNzhMNzNBUEdMTWJHMklmCk96dk1ucThNMUYxZnVQeU42c294NGRLV3AxUHAzYXcycjdaWUNHbXl2ZW9wRW9wWXJGTjMwZkZ6cnJNR0FmUHIKNUNsWnc3N0djMFRxYnQ2UVVVd2JxWFoxbmFLb3R5UU5EcktqWkJKSG1YbnpPRE5tdnNJQ0dVaEJqV01MSmtkSApUdnRIdXJ0RmdUZnkydDN3Ukl0NFppNytSQUxyd3QzTGs0aVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxakZ3Z3MvUHFkSTQ3R0diOHQrbnZQdUdkb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNN3NPNUV6OWVhTnJ0K29XeVNZTXRkK1o0cUZEWHFxOWwvaktQUDZpTkhQbjlxNTFEUWdPbFBpCm9PMXkzcW9ReVR3UUtFSXFuRTdhV0lpN2dHNlgxUzE3L1lpQ1NZTEVyRTEvRG1DbmJ3NUZKdDNpUDBPWTNtQkMKZnk5cmhFaUpBdDk0dDg5OHB2U0FSSUhqemJ4eGthNkFBVkR4K2ErdjNabm5IZjFSQjVMNks1YWVMVitGYjlncwpKS2tKZjlsZVBCQ242ditnS0svNElHMU5OWENjSG5zcGUwNVI5dzFtNytjb3BTV1lIVU1tUys0bjg5dDBKY01GCnRwcVJmSktVNUNaYnFnMVorN1JGaVkvdTRzRHd4WEZ2bnZNbzUrNWQ3bVZqL3BBNGlyS0g1Z3c5dmd6RzhiejYKUU1oVkhkYk1xUHp5ZnhBdE54OFkxSkxYRWRneGhCMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMk5TZmZNOVNDaHJzc1RFeEFtWi9BNjE1bUhZN2k2dnBXamlFV01tTW1LQnJLdzl6CkR4cGZteWFsakQ1aDhub3BvYWVtellEeVkrN3RSQWZldyt5Z2hGOXFTN3FwRmxVK3RiNG50cXBGMDRVTWl3STcKR0RjK2JGVXg1RFRzSWNjSzVXVkR4UXlyTlhDRTFiRnFVQ2YzeXV3SGlrNWRTTkpTVHYrL0MrOXdEeGl6R3h0aQpIenM3eko2dkROUmRYN2o4amVyS01lSFNscWRUNmQyc05xKzJXQWhwc3IzcUtSS0tXS3hUZDlIeGM2NnpCZ0h6CjYrUXBXY08reG5ORTZtN2VrRkZNRzZsMmRaMmlxTGNrRFE2eW8yUVNSNWw1OHpnelpyN0NBaGxJUVkxakN5WkgKUjA3N1I3cTdSWUUzOHRyZDhFU0xlR1l1L2tRQzY4TGR5NU9JandJREFRQUJBb0lCQUc0K1JNeW5lRFhORkxUTwpwdlZxZVgrOExzdTJxWFhOTlRyNjYwZGRTays3bUdGdlhIZThXQW5CYjRCTG8yOHViNFpTZ0R1U0tTdG9LbGhoCmpBQ2ZpY2xqM2Q2ZERDVmZ1QitkakFHU3R5ZmhTTXhRbVEwcDRXSWhPdG1sa3IxbHZ3TjlKaVRFMlRPMWZzUkwKalJzdUJ3MjBUZTBqQk1qbXJwU2Q4VnUzSklsM2ZNaHpEbzJUMzNnZ2ttdmw3R2tiVDk1MnMxZmhub1hPNzcyZQpnTGdUbGVkMWh3aXBVbTNQTFF5eXBXaGs4SWZ0ODV2bkgvMHpobStKZDRYcTdzdnprREFWUUJTaVArVUlYQ0E2CjNqVGZ6Yk1ZSC84N0YzZW93S2s5NjIxRDB2eWFMWkRtTHYrdzdZYVhyMlNETnRGbDY1dmxkQzlyNHVURU5NZXgKdUdxemVDRUNnWUVBNVp4elQ2SFFyZklWUi9ENmxJTktUSFo3akdJMnZ3SnpMKzZkRjM0K1g2RDh6MHMrL0N2MQorWmZzVW9NN1Y4ZHRHQ2dmdXJybnVUY3hzT0NQa1dJci91MTJjWDZPNXdiakVZcTBOckZwVTFZWnB1TTJqN2tGCjVpcjVMMGtvY2hmS3dEY2RJOHUxN1B3T0pmUkdWWjVwZVVsUDFIbGp3V0tzNTBaVTFFdWJZdjhDZ1lFQThjQWwKZE1sNUhOeXgvcVE5MS9VbWREYVRqMHA4aWRSM2xZR3RWaTkwanRoMFpxaXNvR0lnN2kxaFMraXZWUGxSdER5UgpyMXZRWVRUdzRoWmxPb0ZkOEcwR2lZK0NvTVZDT0xxeUJBd2kzQUsyOWtXcmNYeFdIZHh5UDJDbHllUHQveWo2CnFFQS9uRXNvWkhQeHNkNlZIRlBKNWREN0pIUlVoamMzTWpWQktuRUNnWUVBcG1Mb0FLV3U5YzMrYytLQmd3dGMKMU9ucS84RFFFVHh5UWlLMGZhakRCRU5Ceitta0c5S3piWW9VKzNvVGo3bDVLYzh4cHZ2NEhYU01zck1YOW05ZwptRngxdnlySjNVcFZVNG5pcTl1R0NwalMvK2VZeXk5MXdlUVVMSnJrRDBHRWNDUEFId2RvcnZHOFF1NnY1UzFsCkd6bnYrblY0djFPRkhoY09NOFVTTmZzQ2dZRUF2dzFjVEtTZ3EzZWF6NlJiSDUybFN6aUtlemFobjRlakRpdVMKb2tjVXRZTkkwb3pCQ0dza25UYU42eUN6MTlMRmlFeEowaTBjVElZN1RHSG9sRWtDeFd4VU8waUlNcWhTQW1WQgpKRU8zRk9xc1Q0cVZ5RFU4RlpOUFV0ajlqTVV1SkhYdFNpU2tZTTlnMTZwdHUyVXRzRnBqZDlVbGRSVGVhOGVkClBuZXB6WEVDZ1lCL0lReXpSQ2ppRGM4clhkRE8xTmNtSFZ4Sk9kY0crU01RZ1pkcVhYYWhXN0g2UUV3OEFMRmUKVzBYQ1BuMGE1WVdyV1Z0RkdDRStmRy9DT20vcWZueUdXVUg2RFRVRFhQQVg4OFQ2S2U0SWoxZXJLVk5xNm1GdgpsRE03d0lXVWlVazBVUFgzV1lVSmlRT0RxU0w4M29TUzVFTURQdWpBSEJETUYxZWJ3VFl3cUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    ---
    # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
    apiVersion: v1
    kind: Secret
    metadata:
      name: hubble-server-certs
      namespace: kube-system
    type: kubernetes.io/tls
    data:
      ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRkN1VHRQaDZldHhXcEJxNlBoTVhsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpFNE1UVTFORE01V2hjTk1qWXdNakUzTVRVMQpORE01V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFkxSjk4ejFJS0d1eXhNVEVDWm44RHJYbVlkanVMcStsYU9JUll5WXlZb0dzckQzTVAKR2wrYkpxV01QbUh5ZWltaHA2Yk5nUEpqN3UxRUI5N0Q3S0NFWDJwTHVxa1dWVDYxdmllMnFrWFRoUXlMQWpzWQpOejVzVlRIa05Pd2h4d3JsWlVQRkRLczFjSVRWc1dwUUovZks3QWVLVGwxSTBsSk8vNzhMNzNBUEdMTWJHMklmCk96dk1ucThNMUYxZnVQeU42c294NGRLV3AxUHAzYXcycjdaWUNHbXl2ZW9wRW9wWXJGTjMwZkZ6cnJNR0FmUHIKNUNsWnc3N0djMFRxYnQ2UVVVd2JxWFoxbmFLb3R5UU5EcktqWkJKSG1YbnpPRE5tdnNJQ0dVaEJqV01MSmtkSApUdnRIdXJ0RmdUZnkydDN3Ukl0NFppNytSQUxyd3QzTGs0aVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxakZ3Z3MvUHFkSTQ3R0diOHQrbnZQdUdkb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNN3NPNUV6OWVhTnJ0K29XeVNZTXRkK1o0cUZEWHFxOWwvaktQUDZpTkhQbjlxNTFEUWdPbFBpCm9PMXkzcW9ReVR3UUtFSXFuRTdhV0lpN2dHNlgxUzE3L1lpQ1NZTEVyRTEvRG1DbmJ3NUZKdDNpUDBPWTNtQkMKZnk5cmhFaUpBdDk0dDg5OHB2U0FSSUhqemJ4eGthNkFBVkR4K2ErdjNabm5IZjFSQjVMNks1YWVMVitGYjlncwpKS2tKZjlsZVBCQ242ditnS0svNElHMU5OWENjSG5zcGUwNVI5dzFtNytjb3BTV1lIVU1tUys0bjg5dDBKY01GCnRwcVJmSktVNUNaYnFnMVorN1JGaVkvdTRzRHd4WEZ2bnZNbzUrNWQ3bVZqL3BBNGlyS0g1Z3c5dmd6RzhiejYKUU1oVkhkYk1xUHp5ZnhBdE54OFkxSkxYRWRneGhCMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU9iNmI5ZXdKWVFyeWVNemxZNFVWMDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURJeE9ERTFOVFF6T1ZvWERUSTJNREl4TnpFMQpOVFF6T1Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs2bGFURmJFeFBhTUhJc25MYzgKckxGbG1MWkkzdHBYQUl0Um9mVkxrUU9zaDlNOURMT0N4L25rL1dUbXo4YmVWeVVqdDJoMkRSSkhxMjVZcFhoVwpOM0lubWpVeE92NWF4TUhGemN4WnZIYzdPVkxuNmRDQmRRRVBnUW5ZRExEelJuT0MzOW8vaE9LcE9aZHk1UWlkCmFiM0RDbjUwdzJXOHY3L0NWUUszU2dNczN2M05LZGxDQmdNYlRLYTBzV0RSTHhxYVRrM3NSKzhreXFnVnFLV28KMGl0YkNScFI5Y3MyOWc4dDFMdUhGaU5nUFhlQ3YzQlZadEpEWG9GYTR5UHd2cEh1bUt6ZGZpblFmd2I0YjZZbQpzQXlvYjdNTmhBMVJhUUlYZVgxTDNnVjQrTmo5UlZXUStIVENyZTVEdGxtU2dFQzRjcE5aY1c0eXlCYnpwdTFZCks4a0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXFqRndncy9QcWRJNAo3R0diOHQrbnZQdUdkb1F3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUN0Vzl1NDlzWm1zeHJaVlpFbnJabFp6dmkxSmYKR0VMaE5jNHJDSENlTUpNd3Q4RWljTlZNM1k5ZFY2ZENpY1RmOExTai9vakJjemU3MWNHcHBhUkRNTTR3Z1FjbQpWd3AvV2ZicWVkVm03eldKM0U1VEN1dERKMG9PSGYzUGM0YUgzK3RFQmgrL0R0VmhYd2N6YWtmcWo0YUdNUXVtCmxXWVhxby9Zbkx1OExPejdsOWFTME50ck52Zm9NKzNwSjlZQUVPWWhGWlR2cjllUWtRT2ZEdE5tUlExb0RIREsKL3l0S2VJRmRZQUt2TjArTlBCNnAxZHVUc1Q1d1E5QU0zZ1RFblV4UmpxaitsU0dTdDc1Nk80M1dyRkkxL2p6ZApXRWJHaEdVdFFyUG5ZRUs3Q0lWWC8yZ1pldGx3VStkeERUVUZSRnJveG56SDdDSmJLYVQ2UTJFaFRnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcnFWcE1Wc1RFOW93Y2l5Y3R6eXNzV1dZdGtqZTJsY0FpMUdoOVV1UkE2eUgwejBNCnM0TEgrZVQ5Wk9iUHh0NVhKU08zYUhZTkVrZXJibGlsZUZZM2NpZWFOVEU2L2xyRXdjWE56Rm04ZHpzNVV1ZnAKMElGMUFRK0JDZGdNc1BOR2M0TGYyaitFNHFrNWwzTGxDSjFwdmNNS2ZuVERaYnkvdjhKVkFyZEtBeXplL2MwcAoyVUlHQXh0TXByU3hZTkV2R3BwT1RleEg3eVRLcUJXb3BhalNLMXNKR2xIMXl6YjJEeTNVdTRjV0kyQTlkNEsvCmNGVm0wa05lZ1ZyakkvQytrZTZZck4xK0tkQi9Cdmh2cGlhd0RLaHZzdzJFRFZGcEFoZDVmVXZlQlhqNDJQMUYKVlpENGRNS3Q3a08yV1pLQVFMaHlrMWx4YmpMSUZ2T203VmdyeVFJREFRQUJBb0lCQVFDVDNVcE4xbDAxbnJNTAp4OGU3d0N3NldkbE01QytDVHMwUUo4Sm5DMTZ3N0o5bThyWlJPZllVRnBPUG5YZm5XUklSU01jZE0yM252elJlCnpjRHpQSlBmRzdhTk9LeEk5QkxJT0xBQVJ5MnhDVHlFZkFQVFcvZnpPT3c0cUdvK1d3cVgvQU9KSmVSZGY0ZGEKT1pXK2tJQVpnUXZlZXYrQW9LajhNdzJFcWlpSXZFcldnaDVCcmhaNHdpV1VOY1ArUVBGNHBzcUs5Sm9xM2xmRQorTU1hUHBudkRIOUk0ajl4ZGZ1NGhscjFlWDRseGtsUWFCTVJWVUZnSkVOdk5ndTl4cUYzcHBudVNXK0h4YW94Cm9CVDlaS0NDMXJ1THlpcWpYUUttbTM3ZmNjY3FzRkErblpvSHpyZWU1djVPbjlNcGsrY2x0UlhYNTVVNGZQb2cKdSthTHBoZDlBb0dCQU1RdHZ4eWpyVnpWSHVLUTNWZnVHampyTmMrVTArdTlvWGFWOXVpTWY2U2h1MlpWY3NuVwpxdXZVbTJVUHpnR05YczRHb2FRTzdoNUlZTEc5ckJlTkhVU0RCZmJEaURxWFhSS2tWelBrMlYrbXIwT1JLM2lhCjdmekxWeG1ncEJtV2hIVis4UWZnNXZTQXVmUVNOOW12K0ZzTVYwbHcxSlplTUppWko0ZENtZnh6QW9HQkFPUG0KeGQzcElDZTVoMlo5VnE2SjBnTlUxemZjeTVWRm1CUHVCU2M4eEI1a2Q2OHV4dEd4dms5Vzdwb0xNbGdIRnYvUwp3YzBGQnM3Sk9WRSt0c1NZZXczaVlJVnVnRUtDalJwMVphVU5ISUxIR0ZZTG5BSENuME1pbzhOQ2RuUU9YWUNxCnVtbkpiR2IzQWRCUThESFRKeHFxQTRoUGprM1JqN0J6TjlDemVVUFRBb0dCQUtWZ1p4NHVnTU9rU1ovM1BSQ1cKQVBjQW1XRS9kaExoemc1WXgwY3N3YUc0VVhFb0VWZERKdDBkWWs0a3I2WXhWYjFhYThNUWJ2MktTREV0MHJnYgoxcE5kM0pZMEtWQXpMMXU2dkdSYnhEOVZGYVJnNllPSEg1NmVqL05qcjFKK3gzVUJLUkZhTDNmb1dGbi9UYU91Ckt6QWR6Q3QxK1ZBMVlNUVRQL1pQVjk0dkFvR0FTNzRGNHVPNDZScnpFaS96NEJ3ejdTR0VTYStiQmFoVWk4TWUKZVZUcnhVSVV1T2N0OHNGRkE2OWJxMXl2UmF4Tmk0WnJISTFnSHRlbnNnWEt6bm55NDhGcDNNN0YxOVQxdW1acgorcmZwMHRrQ2tJNVpNZ2lSejhreWJoR250cGlUb05DZEZjMTR0cHUvUVpHMDBvcGZ3Ni9mYnEwcUdWamRqWUl0CmViSThTanNDZ1lFQW1naDYvWVBLRUc0UUljQnd3WSthV0JoVzQ0MkdCU0s5enpLb3djWFF6Zk1SUGFWVzVXL28KWWJCWk16dXRVSzZsS0k4WjZNSER0UjBTell4Q1dyYXNOb3BEUEtadVNLUU0rM2dKVzY1MlZwbGhKb3NnRUE3VgpWM3YwUmlsTjlQKzl2NnY5d3ZpZXYxTzRhUlBYaDliV1UxU1UrUVp6bVlvZ0hpQ3J6WU1iSHhNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    ---
    # Source: cilium/templates/cilium-configmap.yaml
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cilium-config
      namespace: kube-system
    data:
    
      # Identity allocation mode selects how identities are shared between cilium
      # nodes by setting how they are stored. The options are "crd" or "kvstore".
      # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
      #   These can be queried with:
      #     kubectl get ciliumid
      # - "kvstore" stores identities in an etcd kvstore, that is
      #   configured below. Cilium versions before 1.6 supported only the kvstore
      #   backend. Upgrades from these older cilium versions should continue using
      #   the kvstore by commenting out the identity-allocation-mode below, or
      #   setting it to "kvstore".
      identity-allocation-mode: crd
      identity-heartbeat-timeout: "30m0s"
      identity-gc-interval: "15m0s"
      cilium-endpoint-gc-interval: "5m0s"
      nodes-gc-interval: "5m0s"
      skip-cnp-status-startup-clean: "false"
      # Disable the usage of CiliumEndpoint CRD
      disable-endpoint-crd: "false"
    
      # If you want to run cilium in debug mode change this value to true
      debug: "false"
      debug-verbose: ""
      # The agent can be put into the following three policy enforcement modes
      # default, always and never.
      # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
      enable-policy: "default"
    
      # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
      # address.
      enable-ipv4: "true"
    
      # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
      # address.
      enable-ipv6: "false"
      # Users who wish to specify their own custom CNI configuration file must set
      # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
      custom-cni-conf: "false"
      enable-bpf-clock-probe: "true"
      # If you want cilium monitor to aggregate tracing for packets, set this level
      # to "low", "medium", or "maximum". The higher the level, the less packets
      # that will be seen in monitor output.
      monitor-aggregation: medium
    
      # The monitor aggregation interval governs the typical time between monitor
      # notification events for each allowed connection.
      #
      # Only effective when monitor aggregation is set to "medium" or higher.
      monitor-aggregation-interval: "5s"
    
      # The monitor aggregation flags determine which TCP flags which, upon the
      # first observation, cause monitor notifications to be generated.
      #
      # Only effective when monitor aggregation is set to "medium" or higher.
      monitor-aggregation-flags: all
      # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
      # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
      bpf-map-dynamic-size-ratio: "0.0025"
      # bpf-policy-map-max specifies the maximum number of entries in endpoint
      # policy map (per endpoint)
      bpf-policy-map-max: "16384"
      # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
      # backend and affinity maps.
      bpf-lb-map-max: "65536"
      bpf-lb-external-clusterip: "false"
    
      # Pre-allocation of map entries allows per-packet latency to be reduced, at
      # the expense of up-front memory allocation for the entries in the maps. The
      # default value below will minimize memory usage in the default installation;
      # users who are sensitive to latency may consider setting this to "true".
      #
      # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
      # this option and behave as though it is set to "true".
      #
      # If this value is modified, then during the next Cilium startup the restore
      # of existing endpoints and tracking of ongoing connections may be disrupted.
      # As a result, reply packets may be dropped and the load-balancing decisions
      # for established connections may change.
      #
      # If this option is set to "false" during an upgrade from 1.3 or earlier to
      # 1.4 or later, then it may cause one-time disruptions during the upgrade.
      preallocate-bpf-maps: "false"
    
      # Regular expression matching compatible Istio sidecar istio-proxy
      # container image names
      sidecar-istio-proxy-image: "cilium/istio_proxy"
    
      # Name of the cluster. Only relevant when building a mesh of clusters.
      cluster-name: default
      # Unique ID of the cluster. Must be unique across all conneted clusters and
      # in the range of 1 and 255. Only relevant when building a mesh of clusters.
      cluster-id: "0"
    
      # Encapsulation mode for communication between nodes
      # Possible values:
      #   - disabled
      #   - vxlan (default)
      #   - geneve
      tunnel: "vxlan"
    
    
      # Enables L7 proxy for L7 policy enforcement and visibility
      enable-l7-proxy: "true"
    
      enable-ipv4-masquerade: "true"
      enable-ipv6-big-tcp: "false"
      enable-ipv6-masquerade: "true"
    
      enable-xt-socket-fallback: "true"
      install-iptables-rules: "true"
      install-no-conntrack-iptables-rules: "false"
    
      auto-direct-node-routes: "false"
      enable-local-redirect-policy: "false"
    
      kube-proxy-replacement: "strict"
      kube-proxy-replacement-healthz-bind-address: ""
      bpf-lb-sock: "false"
      enable-health-check-nodeport: "true"
      node-port-bind-protection: "true"
      enable-auto-protect-node-port-range: "true"
      enable-svc-source-range-check: "true"
      enable-l2-neigh-discovery: "true"
      arping-refresh-period: "30s"
      enable-endpoint-health-checking: "true"
      enable-health-checking: "true"
      enable-well-known-identities: "false"
      enable-remote-node-identity: "true"
      synchronize-k8s-nodes: "true"
      operator-api-serve-addr: "127.0.0.1:9234"
      # Enable Hubble gRPC service.
      enable-hubble: "true"
      # UNIX domain socket for Hubble server to listen to.
      hubble-socket-path: "/var/run/cilium/hubble.sock"
      # An additional address for Hubble server to listen to (e.g. ":4244").
      hubble-listen-address: ":4244"
      hubble-disable-tls: "false"
      hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
      hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
      hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
      ipam: "cluster-pool"
      cluster-pool-ipv4-cidr: "10.0.0.0/8"
      cluster-pool-ipv4-mask-size: "24"
      disable-cnp-status-updates: "true"
      enable-vtep: "false"
      vtep-endpoint: ""
      vtep-cidr: ""
      vtep-mask: ""
      vtep-mac: ""
      enable-bgp-control-plane: "false"
      procfs: "/host/proc"
      bpf-root: "/sys/fs/bpf"
      cgroup-root: "/run/cilium/cgroupv2"
      enable-k8s-terminating-endpoint: "true"
      enable-sctp: "false"
      remove-cilium-node-taints: "true"
      set-cilium-is-up-condition: "true"
      unmanaged-pod-watcher-interval: "15"
      tofqdns-dns-reject-response-code: "refused"
      tofqdns-enable-dns-compression: "true"
      tofqdns-endpoint-max-ip-per-hostname: "50"
      tofqdns-idle-connection-grace-period: "0s"
      tofqdns-max-deferred-connection-deletes: "10000"
      tofqdns-min-ttl: "3600"
      tofqdns-proxy-response-max-delay: "100ms"
      agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
    ---
    # Source: cilium/templates/cilium-agent/clusterrole.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: cilium
      labels:
        app.kubernetes.io/part-of: cilium
    rules:
    - apiGroups:
      - networking.k8s.io
      resources:
      - networkpolicies
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - discovery.k8s.io
      resources:
      - endpointslices
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
    - apiGroups:
      - cilium.io
      resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      verbs:
      - list
      - watch
    - apiGroups:
      - cilium.io
      resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
      verbs:
      - create
    - apiGroups:
      - cilium.io
      # To synchronize garbage collection of such resources
      resources:
      - ciliumidentities
      verbs:
      - update
    - apiGroups:
      - cilium.io
      resources:
      - ciliumendpoints
      verbs:
      - delete
      - get
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnodes
      - ciliumnodes/status
      verbs:
      - get
      - update
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      verbs:
      - patch
    ---
    # Source: cilium/templates/cilium-operator/clusterrole.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: cilium-operator
      labels:
        app.kubernetes.io/part-of: cilium
    rules:
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
    - apiGroups:
      - ""
      resources:
      - nodes
      verbs:
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
      verbs:
      - patch
    - apiGroups:
      - discovery.k8s.io
      resources:
      - endpointslices
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      # to perform LB IP allocation for BGP
      - services/status
      verbs:
      - update
      - patch
    - apiGroups:
      - ""
      resources:
      # to check apiserver connectivity
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
      verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
    - apiGroups:
      - cilium.io
      resources:
      - ciliumendpoints
      - ciliumidentities
      verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
    - apiGroups:
      - cilium.io
      resources:
      - ciliumidentities
      verbs:
      # To synchronize garbage collection of such resources
      - update
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnodes
      verbs:
      - create
      - update
      - get
      - list
      - watch
        # To perform CiliumNode garbage collector
      - delete
    - apiGroups:
      - cilium.io
      resources:
      - ciliumnodes/status
      verbs:
      - update
    - apiGroups:
      - cilium.io
      resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
      verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - create
      - get
      - list
      - watch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - update
      resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
    - apiGroups:
      - cilium.io
      resources:
      - ciliumloadbalancerippools
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - cilium.io
      resources:
      - ciliumloadbalancerippools/status
      verbs:
      - patch
    # For cilium-operator running in HA mode.
    #
    # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
    # between multiple running instances.
    # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
    # common and fewer objects in the cluster watch "all Leases".
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - create
      - get
      - update
    ---
    # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: cilium
      labels:
        app.kubernetes.io/part-of: cilium
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cilium
    subjects:
    - kind: ServiceAccount
      name: "cilium"
      namespace: kube-system
    ---
    # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: cilium-operator
      labels:
        app.kubernetes.io/part-of: cilium
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cilium-operator
    subjects:
    - kind: ServiceAccount
      name: "cilium-operator"
      namespace: kube-system
    ---
    # Source: cilium/templates/cilium-agent/role.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: cilium-config-agent
      namespace: kube-system
      labels:
        app.kubernetes.io/part-of: cilium
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
    ---
    # Source: cilium/templates/cilium-agent/rolebinding.yaml
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: cilium-config-agent
      namespace: kube-system
      labels:
        app.kubernetes.io/part-of: cilium
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: cilium-config-agent
    subjects:
      - kind: ServiceAccount
        name: "cilium"
        namespace: kube-system
    ---
    # Source: cilium/templates/hubble/peer-service.yaml
    apiVersion: v1
    kind: Service
    metadata:
      name: hubble-peer
      namespace: kube-system
      labels:
        k8s-app: cilium
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: hubble-peer
    spec:
      selector:
        k8s-app: cilium
      ports:
      - name: peer-service
        port: 443
        protocol: TCP
        targetPort: 4244
      internalTrafficPolicy: Local
    ---
    # Source: cilium/templates/cilium-agent/daemonset.yaml
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: cilium
      namespace: kube-system
      labels:
        k8s-app: cilium
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-agent
    spec:
      selector:
        matchLabels:
          k8s-app: cilium
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 2
        type: RollingUpdate
      template:
        metadata:
          annotations:
            # Set app AppArmor's profile to "unconfined". The value of this annotation
            # can be modified as long users know which profiles they have available
            # in AppArmor.
            container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
            container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
            container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
            container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
          labels:
            k8s-app: cilium
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
        spec:
          containers:
          - name: cilium-agent
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            command:
            - cilium-agent
            args:
            - --config-dir=/tmp/cilium/config-map
            startupProbe:
              httpGet:
                host: "127.0.0.1"
                path: /healthz
                port: 9879
                scheme: HTTP
                httpHeaders:
                - name: "brief"
                  value: "true"
              failureThreshold: 105
              periodSeconds: 2
              successThreshold: 1
            livenessProbe:
              httpGet:
                host: "127.0.0.1"
                path: /healthz
                port: 9879
                scheme: HTTP
                httpHeaders:
                - name: "brief"
                  value: "true"
              periodSeconds: 30
              successThreshold: 1
              failureThreshold: 10
              timeoutSeconds: 5
            readinessProbe:
              httpGet:
                host: "127.0.0.1"
                path: /healthz
                port: 9879
                scheme: HTTP
                httpHeaders:
                - name: "brief"
                  value: "true"
              periodSeconds: 30
              successThreshold: 1
              failureThreshold: 3
              timeoutSeconds: 5
            env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "10.95.0.1"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            lifecycle:
              postStart:
                exec:
                  command:
                  - "/cni-install.sh"
                  - "--enable-debug=false"
                  - "--cni-exclusive=true"
                  - "--log-file=/var/run/cilium/cilium-cni.log"
              preStop:
                exec:
                  command:
                  - /cni-uninstall.sh
            securityContext:
              seLinuxOptions:
                level: s0
                type: spc_t
              capabilities:
                add:
                  - CHOWN
                  - KILL
                  - NET_ADMIN
                  - NET_RAW
                  - IPC_LOCK
                  - SYS_MODULE
                  - SYS_ADMIN
                  - SYS_RESOURCE
                  - DAC_OVERRIDE
                  - FOWNER
                  - SETGID
                  - SETUID
                drop:
                  - ALL
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            # Unprivileged containers need to mount /proc/sys/net from the host
            # to have write access
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            # Unprivileged containers need to mount /proc/sys/kernel from the host
            # to have write access
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Unprivileged containers can't set mount propagation to bidirectional
              # in this case we will mount the bpf fs from an init container that
              # is privileged and set the mount propagation from host to container
              # in Cilium.
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: cni-path
              mountPath: /host/opt/cni/bin
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
            - name: tmp
              mountPath: /tmp
          initContainers:
          - name: config
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            command:
            - cilium
            - build-config
            env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: "10.95.0.1"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            terminationMessagePolicy: FallbackToLogsOnError
          # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
          # We use nsenter command with host's cgroup and mount namespaces enabled.
          - name: mount-cgroup
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
            command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh and mount that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-mount /hostbin/cilium-mount;
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
              rm /hostbin/cilium-mount
            volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
            terminationMessagePolicy: FallbackToLogsOnError
            securityContext:
              seLinuxOptions:
                level: s0
                type: spc_t
              capabilities:
                add:
                  - SYS_ADMIN
                  - SYS_CHROOT
                  - SYS_PTRACE
                drop:
                  - ALL
          - name: apply-sysctl-overwrites
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            env:
            - name: BIN_PATH
              value: /opt/cni/bin
            command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
              nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
              rm /hostbin/cilium-sysctlfix
            volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
            terminationMessagePolicy: FallbackToLogsOnError
            securityContext:
              seLinuxOptions:
                level: s0
                type: spc_t
              capabilities:
                add:
                  - SYS_ADMIN
                  - SYS_CHROOT
                  - SYS_PTRACE
                drop:
                  - ALL
          # Mount the bpf fs if it is not mounted. We will perform this task
          # from a privileged container because the mount propagation bidirectional
          # only works from privileged containers.
          - name: mount-bpf-fs
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            args:
            - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
            command:
            - /bin/bash
            - -c
            - --
            terminationMessagePolicy: FallbackToLogsOnError
            securityContext:
              privileged: true
            volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
          - name: clean-cilium-state
            image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
            imagePullPolicy: IfNotPresent
            command:
            - /init-container.sh
            env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "10.95.0.1"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            terminationMessagePolicy: FallbackToLogsOnError
            securityContext:
              seLinuxOptions:
                level: s0
                type: spc_t
              capabilities:
                add:
                  - NET_ADMIN
                  - SYS_MODULE
                  - SYS_ADMIN
                  - SYS_RESOURCE
                drop:
                  - ALL
            volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /run/cilium/cgroupv2
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
            resources:
              requests:
                cpu: 100m
                memory: 100Mi # wait-for-kube-proxy
          restartPolicy: Always
          priorityClassName: system-node-critical
          serviceAccount: "cilium"
          serviceAccountName: "cilium"
          terminationGracePeriodSeconds: 1
          hostNetwork: true
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    k8s-app: cilium
                topologyKey: kubernetes.io/hostname
          nodeSelector:
            kubernetes.io/os: linux
          tolerations:
            - operator: Exists
          volumes:
            # For sharing configuration between the "config" initContainer and the agent
          - name: tmp
            emptyDir: {}
            # To keep state between restarts / upgrades
          - name: cilium-run
            hostPath:
              path: /var/run/cilium
              type: DirectoryOrCreate
            # To keep state between restarts / upgrades for bpf maps
          - name: bpf-maps
            hostPath:
              path: /sys/fs/bpf
              type: DirectoryOrCreate
          # To mount cgroup2 filesystem on the host
          - name: hostproc
            hostPath:
              path: /proc
              type: Directory
          # To keep state between restarts / upgrades for cgroup2 filesystem
          - name: cilium-cgroup
            hostPath:
              path: /run/cilium/cgroupv2
              type: DirectoryOrCreate
          # To install cilium cni plugin in the host
          - name: cni-path
            hostPath:
              path:  /opt/cni/bin
              type: DirectoryOrCreate
            # To install cilium cni configuration in the host
          - name: etc-cni-netd
            hostPath:
              path: /etc/cni/net.d
              type: DirectoryOrCreate
            # To be able to load kernel modules
          - name: lib-modules
            hostPath:
              path: /lib/modules
            # To access iptables concurrently with other processes (e.g. kube-proxy)
          - name: xtables-lock
            hostPath:
              path: /run/xtables.lock
              type: FileOrCreate
            # To read the clustermesh configuration
          - name: clustermesh-secrets
            secret:
              secretName: cilium-clustermesh
              # note: the leading zero means this number is in octal representation: do not remove it
              defaultMode: 0400
              optional: true
          - name: host-proc-sys-net
            hostPath:
              path: /proc/sys/net
              type: Directory
          - name: host-proc-sys-kernel
            hostPath:
              path: /proc/sys/kernel
              type: Directory
          - name: hubble-tls
            projected:
              # note: the leading zero means this number is in octal representation: do not remove it
              defaultMode: 0400
              sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                  - key: ca.crt
                    path: client-ca.crt
                  - key: tls.crt
                    path: server.crt
                  - key: tls.key
                    path: server.key
    ---
    # Source: cilium/templates/cilium-operator/deployment.yaml
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: cilium-operator
      namespace: kube-system
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
      # for more details.
      replicas: 2
      selector:
        matchLabels:
          io.cilium/app: operator
          name: cilium-operator
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          annotations:
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          containers:
          - name: cilium-operator
            image: "quay.io/cilium/operator-generic:v1.13.0@sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5"
            imagePullPolicy: IfNotPresent
            command:
            - cilium-operator-generic
            args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
            env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "10.95.0.1"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            livenessProbe:
              httpGet:
                host: "127.0.0.1"
                path: /healthz
                port: 9234
                scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 10
              timeoutSeconds: 3
            volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
            terminationMessagePolicy: FallbackToLogsOnError
          hostNetwork: true
          restartPolicy: Always
          priorityClassName: system-cluster-critical
          serviceAccount: "cilium-operator"
          serviceAccountName: "cilium-operator"
          # In HA mode, cilium-operator pods must not be scheduled on the same
          # node as they will clash with each other.
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    io.cilium/app: operator
                topologyKey: kubernetes.io/hostname
          nodeSelector:
            kubernetes.io/os: linux
          tolerations:
            - operator: Exists
          volumes:
            # To read the configuration from the config map
          - name: cilium-config-path
            configMap:
              name: cilium-config
